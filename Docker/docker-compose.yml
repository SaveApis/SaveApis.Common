services:
  application-server:
    depends_on:
      redis:
        condition: service_healthy
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    image: common-example-console-server:dev
    build:
      context: ..
      dockerfile: examples/Example.Console/Dockerfile
    environment:
      - database_sql_name=Example
      - database_sql_server=database
      - database_sql_port=3306
      - database_sql_database=example
      - database_sql_user=example
      - database_sql_password=example
      - logging_outputs=console,file,elasticsearch
      - logging_elasticsearch_uri=http://elasticsearch:9200
      - hangfire_type=server
      - hangfire_redis_host=redis
      - hangfire_redis_port=6379
      - hangfire_redis_database=0
      - hangfire_redis_prefix=saveapis:hangfire
  application-worker:
    depends_on:
      redis:
        condition: service_healthy
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    image: common-example-console-worker:dev
    build:
      context: ..
      dockerfile: examples/Example.Console/Dockerfile
    environment:
      - database_sql_name=Example
      - database_sql_server=database
      - database_sql_port=3306
      - database_sql_database=example
      - database_sql_user=example
      - database_sql_password=example
      - logging_outputs=console,file,elasticsearch
      - logging_elasticsearch_uri=http://elasticsearch:9200
      - hangfire_type=worker
      - hangfire_redis_host=redis
      - hangfire_redis_port=6379
      - hangfire_redis_database=0
      - hangfire_redis_prefix=saveapis:hangfire
  database:
    image: mysql:9.2.0
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=example
      - MYSQL_USER=example
      - MYSQL_PASSWORD=example
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uexample", "-pexample" ]
      interval: 1s
      timeout: 3s
      retries: 30
    volumes:
      - database:/var/lib/mysql
  elasticsearch:
    image: elasticsearch:8.17.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    mem_limit: 1GB
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 1s
      timeout: 3s
      retries: 30
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
  redis:
    image: redis:8.0-M04-alpine3.21
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 1s
      retries: 30

  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: kibana:8.17.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  database:
  elasticsearch: