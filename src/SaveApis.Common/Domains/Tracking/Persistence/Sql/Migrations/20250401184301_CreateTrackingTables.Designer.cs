// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaveApis.Common.Domains.Tracking.Persistence.Sql;

#nullable disable

namespace SaveApis.Common.Domains.Tracking.Persistence.Sql.Migrations
{
    [DbContext(typeof(TrackingDbContext))]
    [Migration("20250401184301_CreateTrackingTables")]
    partial class CreateTrackingTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Tracking")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SaveApis.Common.Domains.Tracking.Domain.Entities.TrackingEntryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AffectedEntityId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("TrackedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TrackingType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Entries", "Tracking");
                });

            modelBuilder.Entity("SaveApis.Common.Domains.Tracking.Domain.Entities.TrackingValueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("NewValue")
                        .HasColumnType("longtext");

                    b.Property<string>("OldValue")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TrackingEntryId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TrackingEntryId");

                    b.ToTable("EntryValues", "Tracking");
                });

            modelBuilder.Entity("SaveApis.Common.Domains.Tracking.Domain.Entities.TrackingValueEntity", b =>
                {
                    b.HasOne("SaveApis.Common.Domains.Tracking.Domain.Entities.TrackingEntryEntity", "TrackingEntry")
                        .WithMany("Values")
                        .HasForeignKey("TrackingEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrackingEntry");
                });

            modelBuilder.Entity("SaveApis.Common.Domains.Tracking.Domain.Entities.TrackingEntryEntity", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
